// This file is generated by discover-dependencies. Do not edit by hand.

const std = @import("std");
pub fn build(b: *std.Build, asset_dir: std.Build.LazyPath) !void {

const @"yaml" = b.addSystemCommand(&.{ "R" });
@"yaml".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"yaml_out" = @"yaml".addOutputDirectoryArg("lib");
_ = @"yaml".addFileArg(asset_dir.path(b, "yaml_2.3.10.tar.gz"));
@"yaml".step.name = "yaml";
 const @"yaml_install" = b.addInstallDirectory(.{
.source_dir = @"yaml_out".path(b, "yaml"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "yaml",
});
b.getInstallStep().dependOn(&@"yaml_install".step);

const @"sys" = b.addSystemCommand(&.{ "R" });
@"sys".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"sys_out" = @"sys".addOutputDirectoryArg("lib");
_ = @"sys".addFileArg(asset_dir.path(b, "sys_3.4.2.tar.gz"));
@"sys".step.name = "sys";
 const @"sys_install" = b.addInstallDirectory(.{
.source_dir = @"sys_out".path(b, "sys"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "sys",
});
b.getInstallStep().dependOn(&@"sys_install".step);

const @"rediscc" = b.addSystemCommand(&.{ "R" });
@"rediscc".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rediscc_out" = @"rediscc".addOutputDirectoryArg("lib");
_ = @"rediscc".addFileArg(asset_dir.path(b, "rediscc_0.1-6.tar.gz"));
@"rediscc".step.name = "rediscc";
 const @"rediscc_install" = b.addInstallDirectory(.{
.source_dir = @"rediscc_out".path(b, "rediscc"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rediscc",
});
b.getInstallStep().dependOn(&@"rediscc_install".step);

const @"fastmap" = b.addSystemCommand(&.{ "R" });
@"fastmap".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"fastmap_out" = @"fastmap".addOutputDirectoryArg("lib");
_ = @"fastmap".addFileArg(asset_dir.path(b, "fastmap_1.2.0.tar.gz"));
@"fastmap".step.name = "fastmap";
 const @"fastmap_install" = b.addInstallDirectory(.{
.source_dir = @"fastmap_out".path(b, "fastmap"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "fastmap",
});
b.getInstallStep().dependOn(&@"fastmap_install".step);

const @"commonmark" = b.addSystemCommand(&.{ "R" });
@"commonmark".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"commonmark_out" = @"commonmark".addOutputDirectoryArg("lib");
_ = @"commonmark".addFileArg(asset_dir.path(b, "commonmark_1.9.1.tar.gz"));
@"commonmark".step.name = "commonmark";
 const @"commonmark_install" = b.addInstallDirectory(.{
.source_dir = @"commonmark_out".path(b, "commonmark"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "commonmark",
});
b.getInstallStep().dependOn(&@"commonmark_install".step);

const @"brew" = b.addSystemCommand(&.{ "R" });
@"brew".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"brew_out" = @"brew".addOutputDirectoryArg("lib");
_ = @"brew".addFileArg(asset_dir.path(b, "brew_1.0-10.tar.gz"));
@"brew".step.name = "brew";
 const @"brew_install" = b.addInstallDirectory(.{
.source_dir = @"brew_out".path(b, "brew"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "brew",
});
b.getInstallStep().dependOn(&@"brew_install".step);

const @"bitops" = b.addSystemCommand(&.{ "R" });
@"bitops".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"bitops_out" = @"bitops".addOutputDirectoryArg("lib");
_ = @"bitops".addFileArg(asset_dir.path(b, "bitops_1.0-8.tar.gz"));
@"bitops".step.name = "bitops";
 const @"bitops_install" = b.addInstallDirectory(.{
.source_dir = @"bitops_out".path(b, "bitops"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "bitops",
});
b.getInstallStep().dependOn(&@"bitops_install".step);

const @"BH" = b.addSystemCommand(&.{ "R" });
@"BH".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"BH_out" = @"BH".addOutputDirectoryArg("lib");
_ = @"BH".addFileArg(asset_dir.path(b, "BH_1.84.0-0.tar.gz"));
@"BH".step.name = "BH";
 const @"BH_install" = b.addInstallDirectory(.{
.source_dir = @"BH_out".path(b, "BH"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "BH",
});
b.getInstallStep().dependOn(&@"BH_install".step);

const @"Cairo" = b.addSystemCommand(&.{ "R" });
@"Cairo".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"Cairo_out" = @"Cairo".addOutputDirectoryArg("lib");
_ = @"Cairo".addFileArg(asset_dir.path(b, "Cairo_1.6-2.tar.gz"));
@"Cairo".step.name = "Cairo";
 const @"Cairo_install" = b.addInstallDirectory(.{
.source_dir = @"Cairo_out".path(b, "Cairo"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "Cairo",
});
b.getInstallStep().dependOn(&@"Cairo_install".step);

const @"base64enc" = b.addSystemCommand(&.{ "R" });
@"base64enc".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"base64enc_out" = @"base64enc".addOutputDirectoryArg("lib");
_ = @"base64enc".addFileArg(asset_dir.path(b, "base64enc_0.1-3.tar.gz"));
@"base64enc".step.name = "base64enc";
 const @"base64enc_install" = b.addInstallDirectory(.{
.source_dir = @"base64enc_out".path(b, "base64enc"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "base64enc",
});
b.getInstallStep().dependOn(&@"base64enc_install".step);

const @"FastRWeb" = b.addSystemCommand(&.{ "R" });
@"FastRWeb".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"FastRWeb_out" = @"FastRWeb".addOutputDirectoryArg("lib");
_ = @"FastRWeb".addFileArg(asset_dir.path(b, "FastRWeb_1.2-1.tar.gz"));
@"FastRWeb".step.name = "FastRWeb";
@"FastRWeb".step.dependOn(&@"base64enc".step);
@"FastRWeb".step.dependOn(&@"Cairo".step);
 const @"FastRWeb_install" = b.addInstallDirectory(.{
.source_dir = @"FastRWeb_out".path(b, "FastRWeb"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "FastRWeb",
});
b.getInstallStep().dependOn(&@"FastRWeb_install".step);

const @"PKI" = b.addSystemCommand(&.{ "R" });
@"PKI".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"PKI_out" = @"PKI".addOutputDirectoryArg("lib");
_ = @"PKI".addFileArg(asset_dir.path(b, "PKI_0.1-14.tar.gz"));
@"PKI".step.name = "PKI";
@"PKI".step.dependOn(&@"base64enc".step);
 const @"PKI_install" = b.addInstallDirectory(.{
.source_dir = @"PKI_out".path(b, "PKI"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "PKI",
});
b.getInstallStep().dependOn(&@"PKI_install".step);

const @"R6" = b.addSystemCommand(&.{ "R" });
@"R6".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"R6_out" = @"R6".addOutputDirectoryArg("lib");
_ = @"R6".addFileArg(asset_dir.path(b, "R6_2.5.1.tar.gz"));
@"R6".step.name = "R6";
 const @"R6_install" = b.addInstallDirectory(.{
.source_dir = @"R6_out".path(b, "R6"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "R6",
});
b.getInstallStep().dependOn(&@"R6_install".step);

const @"RCurl" = b.addSystemCommand(&.{ "R" });
@"RCurl".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"RCurl_out" = @"RCurl".addOutputDirectoryArg("lib");
_ = @"RCurl".addFileArg(asset_dir.path(b, "RCurl_1.98-1.16.tar.gz"));
@"RCurl".step.name = "RCurl";
@"RCurl".step.dependOn(&@"bitops".step);
 const @"RCurl_install" = b.addInstallDirectory(.{
.source_dir = @"RCurl_out".path(b, "RCurl"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "RCurl",
});
b.getInstallStep().dependOn(&@"RCurl_install".step);

const @"RSclient" = b.addSystemCommand(&.{ "R" });
@"RSclient".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"RSclient_out" = @"RSclient".addOutputDirectoryArg("lib");
_ = @"RSclient".addFileArg(asset_dir.path(b, "RSclient_0.7-10.tar.gz"));
@"RSclient".step.name = "RSclient";
 const @"RSclient_install" = b.addInstallDirectory(.{
.source_dir = @"RSclient_out".path(b, "RSclient"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "RSclient",
});
b.getInstallStep().dependOn(&@"RSclient_install".step);

const @"Rcpp" = b.addSystemCommand(&.{ "R" });
@"Rcpp".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"Rcpp_out" = @"Rcpp".addOutputDirectoryArg("lib");
_ = @"Rcpp".addFileArg(asset_dir.path(b, "Rcpp_1.0.13.tar.gz"));
@"Rcpp".step.name = "Rcpp";
 const @"Rcpp_install" = b.addInstallDirectory(.{
.source_dir = @"Rcpp_out".path(b, "Rcpp"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "Rcpp",
});
b.getInstallStep().dependOn(&@"Rcpp_install".step);

const @"RcppTOML" = b.addSystemCommand(&.{ "R" });
@"RcppTOML".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"RcppTOML_out" = @"RcppTOML".addOutputDirectoryArg("lib");
_ = @"RcppTOML".addFileArg(asset_dir.path(b, "RcppTOML_0.2.2.tar.gz"));
@"RcppTOML".step.name = "RcppTOML";
@"RcppTOML".step.dependOn(&@"Rcpp".step);
@"RcppTOML".step.dependOn(&@"Rcpp".step);
 const @"RcppTOML_install" = b.addInstallDirectory(.{
.source_dir = @"RcppTOML_out".path(b, "RcppTOML"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "RcppTOML",
});
b.getInstallStep().dependOn(&@"RcppTOML_install".step);

const @"Rook" = b.addSystemCommand(&.{ "R" });
@"Rook".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"Rook_out" = @"Rook".addOutputDirectoryArg("lib");
_ = @"Rook".addFileArg(asset_dir.path(b, "Rook_1.2.tar.gz"));
@"Rook".step.name = "Rook";
@"Rook".step.dependOn(&@"brew".step);
 const @"Rook_install" = b.addInstallDirectory(.{
.source_dir = @"Rook_out".path(b, "Rook"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "Rook",
});
b.getInstallStep().dependOn(&@"Rook_install".step);

const @"Rserve" = b.addSystemCommand(&.{ "R" });
@"Rserve".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"Rserve_out" = @"Rserve".addOutputDirectoryArg("lib");
_ = @"Rserve".addFileArg(asset_dir.path(b, "Rserve_1.8-13.tar.gz"));
@"Rserve".step.name = "Rserve";
 const @"Rserve_install" = b.addInstallDirectory(.{
.source_dir = @"Rserve_out".path(b, "Rserve"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "Rserve",
});
b.getInstallStep().dependOn(&@"Rserve_install".step);

const @"askpass" = b.addSystemCommand(&.{ "R" });
@"askpass".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"askpass_out" = @"askpass".addOutputDirectoryArg("lib");
_ = @"askpass".addFileArg(asset_dir.path(b, "askpass_1.2.0.tar.gz"));
@"askpass".step.name = "askpass";
@"askpass".step.dependOn(&@"sys".step);
 const @"askpass_install" = b.addInstallDirectory(.{
.source_dir = @"askpass_out".path(b, "askpass"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "askpass",
});
b.getInstallStep().dependOn(&@"askpass_install".step);

const @"rappdirs" = b.addSystemCommand(&.{ "R" });
@"rappdirs".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rappdirs_out" = @"rappdirs".addOutputDirectoryArg("lib");
_ = @"rappdirs".addFileArg(asset_dir.path(b, "rappdirs_0.3.3.tar.gz"));
@"rappdirs".step.name = "rappdirs";
 const @"rappdirs_install" = b.addInstallDirectory(.{
.source_dir = @"rappdirs_out".path(b, "rappdirs"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rappdirs",
});
b.getInstallStep().dependOn(&@"rappdirs_install".step);

const @"fs" = b.addSystemCommand(&.{ "R" });
@"fs".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"fs_out" = @"fs".addOutputDirectoryArg("lib");
_ = @"fs".addFileArg(asset_dir.path(b, "fs_1.6.4.tar.gz"));
@"fs".step.name = "fs";
 const @"fs_install" = b.addInstallDirectory(.{
.source_dir = @"fs_out".path(b, "fs"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "fs",
});
b.getInstallStep().dependOn(&@"fs_install".step);

const @"digest" = b.addSystemCommand(&.{ "R" });
@"digest".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"digest_out" = @"digest".addOutputDirectoryArg("lib");
_ = @"digest".addFileArg(asset_dir.path(b, "digest_0.6.37.tar.gz"));
@"digest".step.name = "digest";
 const @"digest_install" = b.addInstallDirectory(.{
.source_dir = @"digest_out".path(b, "digest"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "digest",
});
b.getInstallStep().dependOn(&@"digest_install".step);

const @"rlang" = b.addSystemCommand(&.{ "R" });
@"rlang".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rlang_out" = @"rlang".addOutputDirectoryArg("lib");
_ = @"rlang".addFileArg(asset_dir.path(b, "rlang_1.1.4.tar.gz"));
@"rlang".step.name = "rlang";
 const @"rlang_install" = b.addInstallDirectory(.{
.source_dir = @"rlang_out".path(b, "rlang"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rlang",
});
b.getInstallStep().dependOn(&@"rlang_install".step);

const @"htmltools" = b.addSystemCommand(&.{ "R" });
@"htmltools".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"htmltools_out" = @"htmltools".addOutputDirectoryArg("lib");
_ = @"htmltools".addFileArg(asset_dir.path(b, "htmltools_0.5.8.1.tar.gz"));
@"htmltools".step.name = "htmltools";
@"htmltools".step.dependOn(&@"base64enc".step);
@"htmltools".step.dependOn(&@"digest".step);
@"htmltools".step.dependOn(&@"fastmap".step);
@"htmltools".step.dependOn(&@"rlang".step);
 const @"htmltools_install" = b.addInstallDirectory(.{
.source_dir = @"htmltools_out".path(b, "htmltools"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "htmltools",
});
b.getInstallStep().dependOn(&@"htmltools_install".step);

const @"sass" = b.addSystemCommand(&.{ "R" });
@"sass".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"sass_out" = @"sass".addOutputDirectoryArg("lib");
_ = @"sass".addFileArg(asset_dir.path(b, "sass_0.4.9.tar.gz"));
@"sass".step.name = "sass";
@"sass".step.dependOn(&@"fs".step);
@"sass".step.dependOn(&@"rlang".step);
@"sass".step.dependOn(&@"htmltools".step);
@"sass".step.dependOn(&@"R6".step);
@"sass".step.dependOn(&@"rappdirs".step);
 const @"sass_install" = b.addInstallDirectory(.{
.source_dir = @"sass_out".path(b, "sass"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "sass",
});
b.getInstallStep().dependOn(&@"sass_install".step);

const @"glue" = b.addSystemCommand(&.{ "R" });
@"glue".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"glue_out" = @"glue".addOutputDirectoryArg("lib");
_ = @"glue".addFileArg(asset_dir.path(b, "glue_1.7.0.tar.gz"));
@"glue".step.name = "glue";
 const @"glue_install" = b.addInstallDirectory(.{
.source_dir = @"glue_out".path(b, "glue"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "glue",
});
b.getInstallStep().dependOn(&@"glue_install".step);

const @"cachem" = b.addSystemCommand(&.{ "R" });
@"cachem".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"cachem_out" = @"cachem".addOutputDirectoryArg("lib");
_ = @"cachem".addFileArg(asset_dir.path(b, "cachem_1.1.0.tar.gz"));
@"cachem".step.name = "cachem";
@"cachem".step.dependOn(&@"rlang".step);
@"cachem".step.dependOn(&@"fastmap".step);
 const @"cachem_install" = b.addInstallDirectory(.{
.source_dir = @"cachem_out".path(b, "cachem"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "cachem",
});
b.getInstallStep().dependOn(&@"cachem_install".step);

const @"cli" = b.addSystemCommand(&.{ "R" });
@"cli".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"cli_out" = @"cli".addOutputDirectoryArg("lib");
_ = @"cli".addFileArg(asset_dir.path(b, "cli_3.6.3.tar.gz"));
@"cli".step.name = "cli";
 const @"cli_install" = b.addInstallDirectory(.{
.source_dir = @"cli_out".path(b, "cli"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "cli",
});
b.getInstallStep().dependOn(&@"cli_install".step);

const @"lifecycle" = b.addSystemCommand(&.{ "R" });
@"lifecycle".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"lifecycle_out" = @"lifecycle".addOutputDirectoryArg("lib");
_ = @"lifecycle".addFileArg(asset_dir.path(b, "lifecycle_1.0.4.tar.gz"));
@"lifecycle".step.name = "lifecycle";
@"lifecycle".step.dependOn(&@"cli".step);
@"lifecycle".step.dependOn(&@"glue".step);
@"lifecycle".step.dependOn(&@"rlang".step);
 const @"lifecycle_install" = b.addInstallDirectory(.{
.source_dir = @"lifecycle_out".path(b, "lifecycle"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "lifecycle",
});
b.getInstallStep().dependOn(&@"lifecycle_install".step);

const @"stringi" = b.addSystemCommand(&.{ "R" });
@"stringi".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"stringi_out" = @"stringi".addOutputDirectoryArg("lib");
_ = @"stringi".addFileArg(asset_dir.path(b, "stringi_1.8.4.tar.gz"));
@"stringi".step.name = "stringi";
 const @"stringi_install" = b.addInstallDirectory(.{
.source_dir = @"stringi_out".path(b, "stringi"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "stringi",
});
b.getInstallStep().dependOn(&@"stringi_install".step);

const @"vctrs" = b.addSystemCommand(&.{ "R" });
@"vctrs".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"vctrs_out" = @"vctrs".addOutputDirectoryArg("lib");
_ = @"vctrs".addFileArg(asset_dir.path(b, "vctrs_0.6.5.tar.gz"));
@"vctrs".step.name = "vctrs";
@"vctrs".step.dependOn(&@"cli".step);
@"vctrs".step.dependOn(&@"glue".step);
@"vctrs".step.dependOn(&@"lifecycle".step);
@"vctrs".step.dependOn(&@"rlang".step);
 const @"vctrs_install" = b.addInstallDirectory(.{
.source_dir = @"vctrs_out".path(b, "vctrs"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "vctrs",
});
b.getInstallStep().dependOn(&@"vctrs_install".step);

const @"mime" = b.addSystemCommand(&.{ "R" });
@"mime".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"mime_out" = @"mime".addOutputDirectoryArg("lib");
_ = @"mime".addFileArg(asset_dir.path(b, "mime_0.12.tar.gz"));
@"mime".step.name = "mime";
 const @"mime_install" = b.addInstallDirectory(.{
.source_dir = @"mime_out".path(b, "mime"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "mime",
});
b.getInstallStep().dependOn(&@"mime_install".step);

const @"magrittr" = b.addSystemCommand(&.{ "R" });
@"magrittr".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"magrittr_out" = @"magrittr".addOutputDirectoryArg("lib");
_ = @"magrittr".addFileArg(asset_dir.path(b, "magrittr_2.0.3.tar.gz"));
@"magrittr".step.name = "magrittr";
 const @"magrittr_install" = b.addInstallDirectory(.{
.source_dir = @"magrittr_out".path(b, "magrittr"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "magrittr",
});
b.getInstallStep().dependOn(&@"magrittr_install".step);

const @"memoise" = b.addSystemCommand(&.{ "R" });
@"memoise".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"memoise_out" = @"memoise".addOutputDirectoryArg("lib");
_ = @"memoise".addFileArg(asset_dir.path(b, "memoise_2.0.1.tar.gz"));
@"memoise".step.name = "memoise";
@"memoise".step.dependOn(&@"rlang".step);
@"memoise".step.dependOn(&@"cachem".step);
 const @"memoise_install" = b.addInstallDirectory(.{
.source_dir = @"memoise_out".path(b, "memoise"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "memoise",
});
b.getInstallStep().dependOn(&@"memoise_install".step);

const @"jsonlite" = b.addSystemCommand(&.{ "R" });
@"jsonlite".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"jsonlite_out" = @"jsonlite".addOutputDirectoryArg("lib");
_ = @"jsonlite".addFileArg(asset_dir.path(b, "jsonlite_1.8.8.tar.gz"));
@"jsonlite".step.name = "jsonlite";
 const @"jsonlite_install" = b.addInstallDirectory(.{
.source_dir = @"jsonlite_out".path(b, "jsonlite"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "jsonlite",
});
b.getInstallStep().dependOn(&@"jsonlite_install".step);

const @"jquerylib" = b.addSystemCommand(&.{ "R" });
@"jquerylib".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"jquerylib_out" = @"jquerylib".addOutputDirectoryArg("lib");
_ = @"jquerylib".addFileArg(asset_dir.path(b, "jquerylib_0.1.4.tar.gz"));
@"jquerylib".step.name = "jquerylib";
@"jquerylib".step.dependOn(&@"htmltools".step);
 const @"jquerylib_install" = b.addInstallDirectory(.{
.source_dir = @"jquerylib_out".path(b, "jquerylib"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "jquerylib",
});
b.getInstallStep().dependOn(&@"jquerylib_install".step);

const @"stringr" = b.addSystemCommand(&.{ "R" });
@"stringr".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"stringr_out" = @"stringr".addOutputDirectoryArg("lib");
_ = @"stringr".addFileArg(asset_dir.path(b, "stringr_1.5.1.tar.gz"));
@"stringr".step.name = "stringr";
@"stringr".step.dependOn(&@"cli".step);
@"stringr".step.dependOn(&@"glue".step);
@"stringr".step.dependOn(&@"lifecycle".step);
@"stringr".step.dependOn(&@"magrittr".step);
@"stringr".step.dependOn(&@"rlang".step);
@"stringr".step.dependOn(&@"stringi".step);
@"stringr".step.dependOn(&@"vctrs".step);
 const @"stringr_install" = b.addInstallDirectory(.{
.source_dir = @"stringr_out".path(b, "stringr"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "stringr",
});
b.getInstallStep().dependOn(&@"stringr_install".step);

const @"bslib" = b.addSystemCommand(&.{ "R" });
@"bslib".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"bslib_out" = @"bslib".addOutputDirectoryArg("lib");
_ = @"bslib".addFileArg(asset_dir.path(b, "bslib_0.8.0.tar.gz"));
@"bslib".step.name = "bslib";
@"bslib".step.dependOn(&@"base64enc".step);
@"bslib".step.dependOn(&@"cachem".step);
@"bslib".step.dependOn(&@"fastmap".step);
@"bslib".step.dependOn(&@"htmltools".step);
@"bslib".step.dependOn(&@"jquerylib".step);
@"bslib".step.dependOn(&@"jsonlite".step);
@"bslib".step.dependOn(&@"lifecycle".step);
@"bslib".step.dependOn(&@"memoise".step);
@"bslib".step.dependOn(&@"mime".step);
@"bslib".step.dependOn(&@"rlang".step);
@"bslib".step.dependOn(&@"sass".step);
 const @"bslib_install" = b.addInstallDirectory(.{
.source_dir = @"bslib_out".path(b, "bslib"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "bslib",
});
b.getInstallStep().dependOn(&@"bslib_install".step);

const @"xfun" = b.addSystemCommand(&.{ "R" });
@"xfun".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"xfun_out" = @"xfun".addOutputDirectoryArg("lib");
_ = @"xfun".addFileArg(asset_dir.path(b, "xfun_0.47.tar.gz"));
@"xfun".step.name = "xfun";
 const @"xfun_install" = b.addInstallDirectory(.{
.source_dir = @"xfun_out".path(b, "xfun"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "xfun",
});
b.getInstallStep().dependOn(&@"xfun_install".step);

const @"curl" = b.addSystemCommand(&.{ "R" });
@"curl".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"curl_out" = @"curl".addOutputDirectoryArg("lib");
_ = @"curl".addFileArg(asset_dir.path(b, "curl_5.2.2.tar.gz"));
@"curl".step.name = "curl";
 const @"curl_install" = b.addInstallDirectory(.{
.source_dir = @"curl_out".path(b, "curl"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "curl",
});
b.getInstallStep().dependOn(&@"curl_install".step);

const @"rprojroot" = b.addSystemCommand(&.{ "R" });
@"rprojroot".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rprojroot_out" = @"rprojroot".addOutputDirectoryArg("lib");
_ = @"rprojroot".addFileArg(asset_dir.path(b, "rprojroot_2.0.4.tar.gz"));
@"rprojroot".step.name = "rprojroot";
 const @"rprojroot_install" = b.addInstallDirectory(.{
.source_dir = @"rprojroot_out".path(b, "rprojroot"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rprojroot",
});
b.getInstallStep().dependOn(&@"rprojroot_install".step);

const @"evaluate" = b.addSystemCommand(&.{ "R" });
@"evaluate".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"evaluate_out" = @"evaluate".addOutputDirectoryArg("lib");
_ = @"evaluate".addFileArg(asset_dir.path(b, "evaluate_0.24.0.tar.gz"));
@"evaluate".step.name = "evaluate";
 const @"evaluate_install" = b.addInstallDirectory(.{
.source_dir = @"evaluate_out".path(b, "evaluate"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "evaluate",
});
b.getInstallStep().dependOn(&@"evaluate_install".step);

const @"fontawesome" = b.addSystemCommand(&.{ "R" });
@"fontawesome".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"fontawesome_out" = @"fontawesome".addOutputDirectoryArg("lib");
_ = @"fontawesome".addFileArg(asset_dir.path(b, "fontawesome_0.5.2.tar.gz"));
@"fontawesome".step.name = "fontawesome";
@"fontawesome".step.dependOn(&@"rlang".step);
@"fontawesome".step.dependOn(&@"htmltools".step);
 const @"fontawesome_install" = b.addInstallDirectory(.{
.source_dir = @"fontawesome_out".path(b, "fontawesome"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "fontawesome",
});
b.getInstallStep().dependOn(&@"fontawesome_install".step);

const @"openssl" = b.addSystemCommand(&.{ "R" });
@"openssl".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"openssl_out" = @"openssl".addOutputDirectoryArg("lib");
_ = @"openssl".addFileArg(asset_dir.path(b, "openssl_2.2.1.tar.gz"));
@"openssl".step.name = "openssl";
@"openssl".step.dependOn(&@"askpass".step);
 const @"openssl_install" = b.addInstallDirectory(.{
.source_dir = @"openssl_out".path(b, "openssl"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "openssl",
});
b.getInstallStep().dependOn(&@"openssl_install".step);

const @"httr" = b.addSystemCommand(&.{ "R" });
@"httr".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"httr_out" = @"httr".addOutputDirectoryArg("lib");
_ = @"httr".addFileArg(asset_dir.path(b, "httr_1.4.7.tar.gz"));
@"httr".step.name = "httr";
@"httr".step.dependOn(&@"curl".step);
@"httr".step.dependOn(&@"jsonlite".step);
@"httr".step.dependOn(&@"mime".step);
@"httr".step.dependOn(&@"openssl".step);
@"httr".step.dependOn(&@"R6".step);
 const @"httr_install" = b.addInstallDirectory(.{
.source_dir = @"httr_out".path(b, "httr"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "httr",
});
b.getInstallStep().dependOn(&@"httr_install".step);

const @"github" = b.addSystemCommand(&.{ "R" });
@"github".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"github_out" = @"github".addOutputDirectoryArg("lib");
_ = @"github".addFileArg(asset_dir.path(b, "github_0.9.12.tar.gz"));
@"github".step.name = "github";
@"github".step.dependOn(&@"httr".step);
@"github".step.dependOn(&@"Rook".step);
@"github".step.dependOn(&@"stringr".step);
@"github".step.dependOn(&@"jsonlite".step);
 const @"github_install" = b.addInstallDirectory(.{
.source_dir = @"github_out".path(b, "github"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "github",
});
b.getInstallStep().dependOn(&@"github_install".step);

const @"guitar" = b.addSystemCommand(&.{ "R" });
@"guitar".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"guitar_out" = @"guitar".addOutputDirectoryArg("lib");
_ = @"guitar".addFileArg(asset_dir.path(b, "guitar_0.0.3.1.tar.gz"));
@"guitar".step.name = "guitar";
@"guitar".step.dependOn(&@"Rcpp".step);
@"guitar".step.dependOn(&@"stringr".step);
@"guitar".step.dependOn(&@"BH".step);
@"guitar".step.dependOn(&@"Rcpp".step);
@"guitar".step.dependOn(&@"BH".step);
 const @"guitar_install" = b.addInstallDirectory(.{
.source_dir = @"guitar_out".path(b, "guitar"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "guitar",
});
b.getInstallStep().dependOn(&@"guitar_install".step);

const @"here" = b.addSystemCommand(&.{ "R" });
@"here".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"here_out" = @"here".addOutputDirectoryArg("lib");
_ = @"here".addFileArg(asset_dir.path(b, "here_1.0.1.tar.gz"));
@"here".step.name = "here";
@"here".step.dependOn(&@"rprojroot".step);
 const @"here_install" = b.addInstallDirectory(.{
.source_dir = @"here_out".path(b, "here"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "here",
});
b.getInstallStep().dependOn(&@"here_install".step);

const @"highr" = b.addSystemCommand(&.{ "R" });
@"highr".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"highr_out" = @"highr".addOutputDirectoryArg("lib");
_ = @"highr".addFileArg(asset_dir.path(b, "highr_0.11.tar.gz"));
@"highr".step.name = "highr";
@"highr".step.dependOn(&@"xfun".step);
 const @"highr_install" = b.addInstallDirectory(.{
.source_dir = @"highr_out".path(b, "highr"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "highr",
});
b.getInstallStep().dependOn(&@"highr_install".step);

const @"knitr" = b.addSystemCommand(&.{ "R" });
@"knitr".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"knitr_out" = @"knitr".addOutputDirectoryArg("lib");
_ = @"knitr".addFileArg(asset_dir.path(b, "knitr_1.48.tar.gz"));
@"knitr".step.name = "knitr";
@"knitr".step.dependOn(&@"evaluate".step);
@"knitr".step.dependOn(&@"highr".step);
@"knitr".step.dependOn(&@"xfun".step);
@"knitr".step.dependOn(&@"yaml".step);
 const @"knitr_install" = b.addInstallDirectory(.{
.source_dir = @"knitr_out".path(b, "knitr"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "knitr",
});
b.getInstallStep().dependOn(&@"knitr_install".step);

const @"withr" = b.addSystemCommand(&.{ "R" });
@"withr".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"withr_out" = @"withr".addOutputDirectoryArg("lib");
_ = @"withr".addFileArg(asset_dir.path(b, "withr_3.0.1.tar.gz"));
@"withr".step.name = "withr";
 const @"withr_install" = b.addInstallDirectory(.{
.source_dir = @"withr_out".path(b, "withr"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "withr",
});
b.getInstallStep().dependOn(&@"withr_install".step);

const @"markdown" = b.addSystemCommand(&.{ "R" });
@"markdown".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"markdown_out" = @"markdown".addOutputDirectoryArg("lib");
_ = @"markdown".addFileArg(asset_dir.path(b, "markdown_1.13.tar.gz"));
@"markdown".step.name = "markdown";
@"markdown".step.dependOn(&@"commonmark".step);
@"markdown".step.dependOn(&@"xfun".step);
 const @"markdown_install" = b.addInstallDirectory(.{
.source_dir = @"markdown_out".path(b, "markdown"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "markdown",
});
b.getInstallStep().dependOn(&@"markdown_install".step);

const @"png" = b.addSystemCommand(&.{ "R" });
@"png".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"png_out" = @"png".addOutputDirectoryArg("lib");
_ = @"png".addFileArg(asset_dir.path(b, "png_0.1-8.tar.gz"));
@"png".step.name = "png";
 const @"png_install" = b.addInstallDirectory(.{
.source_dir = @"png_out".path(b, "png"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "png",
});
b.getInstallStep().dependOn(&@"png_install".step);

const @"tinytex" = b.addSystemCommand(&.{ "R" });
@"tinytex".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"tinytex_out" = @"tinytex".addOutputDirectoryArg("lib");
_ = @"tinytex".addFileArg(asset_dir.path(b, "tinytex_0.53.tar.gz"));
@"tinytex".step.name = "tinytex";
@"tinytex".step.dependOn(&@"xfun".step);
 const @"tinytex_install" = b.addInstallDirectory(.{
.source_dir = @"tinytex_out".path(b, "tinytex"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "tinytex",
});
b.getInstallStep().dependOn(&@"tinytex_install".step);

const @"reticulate" = b.addSystemCommand(&.{ "R" });
@"reticulate".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"reticulate_out" = @"reticulate".addOutputDirectoryArg("lib");
_ = @"reticulate".addFileArg(asset_dir.path(b, "reticulate_1.39.0.tar.gz"));
@"reticulate".step.name = "reticulate";
@"reticulate".step.dependOn(&@"Rcpp".step);
@"reticulate".step.dependOn(&@"RcppTOML".step);
@"reticulate".step.dependOn(&@"here".step);
@"reticulate".step.dependOn(&@"jsonlite".step);
@"reticulate".step.dependOn(&@"png".step);
@"reticulate".step.dependOn(&@"rappdirs".step);
@"reticulate".step.dependOn(&@"rlang".step);
@"reticulate".step.dependOn(&@"withr".step);
@"reticulate".step.dependOn(&@"Rcpp".step);
 const @"reticulate_install" = b.addInstallDirectory(.{
.source_dir = @"reticulate_out".path(b, "reticulate"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "reticulate",
});
b.getInstallStep().dependOn(&@"reticulate_install".step);

const @"rjson" = b.addSystemCommand(&.{ "R" });
@"rjson".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rjson_out" = @"rjson".addOutputDirectoryArg("lib");
_ = @"rjson".addFileArg(asset_dir.path(b, "rjson_0.2.23.tar.gz"));
@"rjson".step.name = "rjson";
 const @"rjson_install" = b.addInstallDirectory(.{
.source_dir = @"rjson_out".path(b, "rjson"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rjson",
});
b.getInstallStep().dependOn(&@"rjson_install".step);

const @"rmarkdown" = b.addSystemCommand(&.{ "R" });
@"rmarkdown".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rmarkdown_out" = @"rmarkdown".addOutputDirectoryArg("lib");
_ = @"rmarkdown".addFileArg(asset_dir.path(b, "rmarkdown_2.28.tar.gz"));
@"rmarkdown".step.name = "rmarkdown";
@"rmarkdown".step.dependOn(&@"bslib".step);
@"rmarkdown".step.dependOn(&@"evaluate".step);
@"rmarkdown".step.dependOn(&@"fontawesome".step);
@"rmarkdown".step.dependOn(&@"htmltools".step);
@"rmarkdown".step.dependOn(&@"jquerylib".step);
@"rmarkdown".step.dependOn(&@"jsonlite".step);
@"rmarkdown".step.dependOn(&@"knitr".step);
@"rmarkdown".step.dependOn(&@"tinytex".step);
@"rmarkdown".step.dependOn(&@"xfun".step);
@"rmarkdown".step.dependOn(&@"yaml".step);
 const @"rmarkdown_install" = b.addInstallDirectory(.{
.source_dir = @"rmarkdown_out".path(b, "rmarkdown"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rmarkdown",
});
b.getInstallStep().dependOn(&@"rmarkdown_install".step);

const @"sendmailR" = b.addSystemCommand(&.{ "R" });
@"sendmailR".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"sendmailR_out" = @"sendmailR".addOutputDirectoryArg("lib");
_ = @"sendmailR".addFileArg(asset_dir.path(b, "sendmailR_1.4-0.tar.gz"));
@"sendmailR".step.name = "sendmailR";
@"sendmailR".step.dependOn(&@"base64enc".step);
 const @"sendmailR_install" = b.addInstallDirectory(.{
.source_dir = @"sendmailR_out".path(b, "sendmailR"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "sendmailR",
});
b.getInstallStep().dependOn(&@"sendmailR_install".step);

const @"unixtools" = b.addSystemCommand(&.{ "R" });
@"unixtools".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"unixtools_out" = @"unixtools".addOutputDirectoryArg("lib");
_ = @"unixtools".addFileArg(asset_dir.path(b, "unixtools_0.1-1.tar.gz"));
@"unixtools".step.name = "unixtools";
 const @"unixtools_install" = b.addInstallDirectory(.{
.source_dir = @"unixtools_out".path(b, "unixtools"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "unixtools",
});
b.getInstallStep().dependOn(&@"unixtools_install".step);

const @"uuid" = b.addSystemCommand(&.{ "R" });
@"uuid".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"uuid_out" = @"uuid".addOutputDirectoryArg("lib");
_ = @"uuid".addFileArg(asset_dir.path(b, "uuid_1.2-1.tar.gz"));
@"uuid".step.name = "uuid";
 const @"uuid_install" = b.addInstallDirectory(.{
.source_dir = @"uuid_out".path(b, "uuid"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "uuid",
});
b.getInstallStep().dependOn(&@"uuid_install".step);

const @"rcloud.sh" = b.addSystemCommand(&.{ "R" });
@"rcloud.sh".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rcloud.sh_out" = @"rcloud.sh".addOutputDirectoryArg("lib");
_ = @"rcloud.sh".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/rcloud.packages/rcloud.sh"));
@"rcloud.sh".step.name = "rcloud.sh";
 const @"rcloud.sh_install" = b.addInstallDirectory(.{
.source_dir = @"rcloud.sh_out".path(b, "rcloud.sh"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rcloud.sh",
});
b.getInstallStep().dependOn(&@"rcloud.sh_install".step);

const @"gist" = b.addSystemCommand(&.{ "R" });
@"gist".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"gist_out" = @"gist".addOutputDirectoryArg("lib");
_ = @"gist".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/packages/gist"));
@"gist".step.name = "gist";
 const @"gist_install" = b.addInstallDirectory(.{
.source_dir = @"gist_out".path(b, "gist"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "gist",
});
b.getInstallStep().dependOn(&@"gist_install".step);

const @"githubgist" = b.addSystemCommand(&.{ "R" });
@"githubgist".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"githubgist_out" = @"githubgist".addOutputDirectoryArg("lib");
_ = @"githubgist".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/packages/githubgist"));
@"githubgist".step.name = "githubgist";
@"githubgist".step.dependOn(&@"gist".step);
@"githubgist".step.dependOn(&@"github".step);
@"githubgist".step.dependOn(&@"httr".step);
 const @"githubgist_install" = b.addInstallDirectory(.{
.source_dir = @"githubgist_out".path(b, "githubgist"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "githubgist",
});
b.getInstallStep().dependOn(&@"githubgist_install".step);

const @"gitgist" = b.addSystemCommand(&.{ "R" });
@"gitgist".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"gitgist_out" = @"gitgist".addOutputDirectoryArg("lib");
_ = @"gitgist".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/packages/gitgist"));
@"gitgist".step.name = "gitgist";
@"gitgist".step.dependOn(&@"Rcpp".step);
@"gitgist".step.dependOn(&@"guitar".step);
@"gitgist".step.dependOn(&@"PKI".step);
 const @"gitgist_install" = b.addInstallDirectory(.{
.source_dir = @"gitgist_out".path(b, "gitgist"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "gitgist",
});
b.getInstallStep().dependOn(&@"gitgist_install".step);

const @"rcloud.client" = b.addSystemCommand(&.{ "R" });
@"rcloud.client".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rcloud.client_out" = @"rcloud.client".addOutputDirectoryArg("lib");
_ = @"rcloud.client".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/rcloud.client"));
@"rcloud.client".step.name = "rcloud.client";
@"rcloud.client".step.dependOn(&@"RSclient".step);
@"rcloud.client".step.dependOn(&@"FastRWeb".step);
 const @"rcloud.client_install" = b.addInstallDirectory(.{
.source_dir = @"rcloud.client_out".path(b, "rcloud.client"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rcloud.client",
});
b.getInstallStep().dependOn(&@"rcloud.client_install".step);

const @"rcloud.support" = b.addSystemCommand(&.{ "R" });
@"rcloud.support".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rcloud.support_out" = @"rcloud.support".addOutputDirectoryArg("lib");
_ = @"rcloud.support".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/rcloud.support"));
@"rcloud.support".step.name = "rcloud.support";
@"rcloud.support".step.dependOn(&@"base64enc".step);
@"rcloud.support".step.dependOn(&@"rjson".step);
@"rcloud.support".step.dependOn(&@"uuid".step);
@"rcloud.support".step.dependOn(&@"RCurl".step);
@"rcloud.support".step.dependOn(&@"unixtools".step);
@"rcloud.support".step.dependOn(&@"Rserve".step);
@"rcloud.support".step.dependOn(&@"rediscc".step);
@"rcloud.support".step.dependOn(&@"jsonlite".step);
@"rcloud.support".step.dependOn(&@"knitr".step);
@"rcloud.support".step.dependOn(&@"markdown".step);
@"rcloud.support".step.dependOn(&@"png".step);
@"rcloud.support".step.dependOn(&@"Cairo".step);
@"rcloud.support".step.dependOn(&@"httr".step);
@"rcloud.support".step.dependOn(&@"gist".step);
@"rcloud.support".step.dependOn(&@"mime".step);
@"rcloud.support".step.dependOn(&@"sendmailR".step);
@"rcloud.support".step.dependOn(&@"PKI".step);
 const @"rcloud.support_install" = b.addInstallDirectory(.{
.source_dir = @"rcloud.support_out".path(b, "rcloud.support"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rcloud.support",
});
b.getInstallStep().dependOn(&@"rcloud.support_install".step);

const @"rcloud.notebook.info" = b.addSystemCommand(&.{ "R" });
@"rcloud.notebook.info".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rcloud.notebook.info_out" = @"rcloud.notebook.info".addOutputDirectoryArg("lib");
_ = @"rcloud.notebook.info".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/rcloud.packages/rcloud.notebook.info"));
@"rcloud.notebook.info".step.name = "rcloud.notebook.info";
@"rcloud.notebook.info".step.dependOn(&@"rcloud.support".step);
 const @"rcloud.notebook.info_install" = b.addInstallDirectory(.{
.source_dir = @"rcloud.notebook.info_out".path(b, "rcloud.notebook.info"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rcloud.notebook.info",
});
b.getInstallStep().dependOn(&@"rcloud.notebook.info_install".step);

const @"rcloud.python" = b.addSystemCommand(&.{ "R" });
@"rcloud.python".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rcloud.python_out" = @"rcloud.python".addOutputDirectoryArg("lib");
_ = @"rcloud.python".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/rcloud.packages/rcloud.python"));
@"rcloud.python".step.name = "rcloud.python";
@"rcloud.python".step.dependOn(&@"knitr".step);
@"rcloud.python".step.dependOn(&@"markdown".step);
 const @"rcloud.python_install" = b.addInstallDirectory(.{
.source_dir = @"rcloud.python_out".path(b, "rcloud.python"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rcloud.python",
});
b.getInstallStep().dependOn(&@"rcloud.python_install".step);

const @"rcloud.r" = b.addSystemCommand(&.{ "R" });
@"rcloud.r".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rcloud.r_out" = @"rcloud.r".addOutputDirectoryArg("lib");
_ = @"rcloud.r".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/rcloud.packages/rcloud.r"));
@"rcloud.r".step.name = "rcloud.r";
@"rcloud.r".step.dependOn(&@"knitr".step);
@"rcloud.r".step.dependOn(&@"markdown".step);
 const @"rcloud.r_install" = b.addInstallDirectory(.{
.source_dir = @"rcloud.r_out".path(b, "rcloud.r"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rcloud.r",
});
b.getInstallStep().dependOn(&@"rcloud.r_install".step);

const @"rcloud.web" = b.addSystemCommand(&.{ "R" });
@"rcloud.web".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rcloud.web_out" = @"rcloud.web".addOutputDirectoryArg("lib");
_ = @"rcloud.web".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/rcloud.packages/rcloud.web"));
@"rcloud.web".step.name = "rcloud.web";
@"rcloud.web".step.dependOn(&@"Rserve".step);
 const @"rcloud.web_install" = b.addInstallDirectory(.{
.source_dir = @"rcloud.web_out".path(b, "rcloud.web"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rcloud.web",
});
b.getInstallStep().dependOn(&@"rcloud.web_install".step);

const @"rcloud.jupyter" = b.addSystemCommand(&.{ "R" });
@"rcloud.jupyter".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rcloud.jupyter_out" = @"rcloud.jupyter".addOutputDirectoryArg("lib");
_ = @"rcloud.jupyter".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/rcloud.packages/rcloud.jupyter"));
@"rcloud.jupyter".step.name = "rcloud.jupyter";
@"rcloud.jupyter".step.dependOn(&@"knitr".step);
@"rcloud.jupyter".step.dependOn(&@"markdown".step);
@"rcloud.jupyter".step.dependOn(&@"reticulate".step);
@"rcloud.jupyter".step.dependOn(&@"jsonlite".step);
@"rcloud.jupyter".step.dependOn(&@"Rserve".step);
 const @"rcloud.jupyter_install" = b.addInstallDirectory(.{
.source_dir = @"rcloud.jupyter_out".path(b, "rcloud.jupyter"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rcloud.jupyter",
});
b.getInstallStep().dependOn(&@"rcloud.jupyter_install".step);

const @"rcloud.enviewer" = b.addSystemCommand(&.{ "R" });
@"rcloud.enviewer".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rcloud.enviewer_out" = @"rcloud.enviewer".addOutputDirectoryArg("lib");
_ = @"rcloud.enviewer".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/rcloud.packages/rcloud.enviewer"));
@"rcloud.enviewer".step.name = "rcloud.enviewer";
@"rcloud.enviewer".step.dependOn(&@"rcloud.support".step);
 const @"rcloud.enviewer_install" = b.addInstallDirectory(.{
.source_dir = @"rcloud.enviewer_out".path(b, "rcloud.enviewer"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rcloud.enviewer",
});
b.getInstallStep().dependOn(&@"rcloud.enviewer_install".step);

const @"rcloud.rmarkdown" = b.addSystemCommand(&.{ "R" });
@"rcloud.rmarkdown".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rcloud.rmarkdown_out" = @"rcloud.rmarkdown".addOutputDirectoryArg("lib");
_ = @"rcloud.rmarkdown".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/rcloud.packages/rcloud.rmarkdown"));
@"rcloud.rmarkdown".step.name = "rcloud.rmarkdown";
@"rcloud.rmarkdown".step.dependOn(&@"knitr".step);
@"rcloud.rmarkdown".step.dependOn(&@"rmarkdown".step);
 const @"rcloud.rmarkdown_install" = b.addInstallDirectory(.{
.source_dir = @"rcloud.rmarkdown_out".path(b, "rcloud.rmarkdown"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rcloud.rmarkdown",
});
b.getInstallStep().dependOn(&@"rcloud.rmarkdown_install".step);

const @"rcloud.viewer" = b.addSystemCommand(&.{ "R" });
@"rcloud.viewer".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rcloud.viewer_out" = @"rcloud.viewer".addOutputDirectoryArg("lib");
_ = @"rcloud.viewer".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/rcloud.packages/rcloud.viewer"));
@"rcloud.viewer".step.name = "rcloud.viewer";
@"rcloud.viewer".step.dependOn(&@"rcloud.support".step);
 const @"rcloud.viewer_install" = b.addInstallDirectory(.{
.source_dir = @"rcloud.viewer_out".path(b, "rcloud.viewer"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rcloud.viewer",
});
b.getInstallStep().dependOn(&@"rcloud.viewer_install".step);

const @"rcloud.lux" = b.addSystemCommand(&.{ "R" });
@"rcloud.lux".addArgs(&.{
    "CMD",
    "INSTALL",
    "--no-docs",
    "--no-multiarch",
    "-l",
});
 const @"rcloud.lux_out" = @"rcloud.lux".addOutputDirectoryArg("lib");
_ = @"rcloud.lux".addDirectoryArg(b.path("/home/pierre/dev/github/rcloud/rcloud.packages/rcloud.lux"));
@"rcloud.lux".step.name = "rcloud.lux";
@"rcloud.lux".step.dependOn(&@"rcloud.support".step);
 const @"rcloud.lux_install" = b.addInstallDirectory(.{
.source_dir = @"rcloud.lux_out".path(b, "rcloud.lux"),
.install_dir = .{ .custom = "lib" },
.install_subdir = "rcloud.lux",
});
b.getInstallStep().dependOn(&@"rcloud.lux_install".step);

}